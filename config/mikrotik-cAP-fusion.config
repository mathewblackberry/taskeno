/interface bridge port
remove [ find interface=ether1 ]
add interface=ether1 bridge=bridge

/interface vlan
add interface=bridge name=vlan99 vlan-id=99

/interface bridge vlan
add bridge=bridge tagged=bridge vlan-ids=99

/interface wireless cap
set discovery-interfaces=vlan99 enabled=yes interfaces=wlan1,wlan2

/ip address
remove [find]
add address=192.168.99.2/30 interface=vlan99 network=192.168.99.0

:if ([:len [ find interface=lo ]] = 0) do={
  add address={{loopbacks[0]}}/32 comment="Management Loopback" interface=lo network={{loopbacks[0]}}
} else= {
  set [ find interface=lo ] address={{loopbacks[0]}}/32 comment="Management Loopback" network={{loopbacks[0]}}
}

/ip dhcp-client
remove [find]

/user group
:if ([:len [find name=api]] = 0) do={
  add name=api policy=ftp,reboot,write,password,api,rest-api,policy,test,sniff,read,!local,!telnet,!ssh,!winbox,!web,!sensitive,!romon
} else={
  set [find name=api] policy=ftp,reboot,write,password,api,rest-api,policy,test,sniff,read,!local,!telnet,!ssh,!winbox,!web,!sensitive,!romon
}

:if ([:len [find name=backup]] = 0) do={
  add name=backup policy=ssh,read,sensitive,!local,!telnet,!ftp,!reboot,!write,!policy,!test,!winbox,!password,!web,!sniff,!api,!romon,!rest-api
} else={
  set [find name=backup] policy=ssh,read,sensitive,!local,!telnet,!ftp,!reboot,!write,!policy,!test,!winbox,!password,!web,!sniff,!api,!romon,!rest-api
}

/user
:if ([:len [find name=api]] = 0) do={
  add name=api group=api password="*DSv!DgR^Q3FfB4w"
} else={
  set [find name=api] group=api password="*DSv!DgR^Q3FfB4w"
}

/system identity
set name={{hostname}}

/ip dns static
remove [find]

/ip route
add disabled=no distance=1 dst-address=0.0.0.0/0 gateway=192.168.99.1 routing-table=main scope=30 suppress-hw-offload=no target-scope=10

/system ntp client
set enabled=yes

/system/ntp/client/servers
:if ([:len [find address="172.27.244.254"]] = 0) do={
    add address=172.27.244.254
}
:if ([:len [find address="172.27.244.253"]] = 0) do={
    add address=172.27.244.253
}

/snmp community
:if ([find default=yes disabled=no] != "") do={
  set [find default=yes] disabled=yes
  :log info "Default SNMP community disabled."
}
:if ([:len [find name=bsitaskenosnmp-ro]] = 0) do={
  add addresses=172.27.251.0/25 name=bsitaskenosnmp-ro
  :log info "SNMP community 'bsitaskenosnmp-ro' added."
} else={
  :log info "SNMP community 'bsitaskenosnmp-ro' already exists."
}

/snmp
set contact=mathew@blacksaltit.com.au enabled=yes location="{{site.address}}, {{site.city}} {{site.state}} {{site.postcode}} [{{site.latitude}}, {{site.longitude}}]" src-address={{loopbacks[0]}} trap-community=bsitaskenosnmp-ro trap-generators=interfaces trap-interfaces=all trap-target=172.27.251.10

/system clock
set time-zone-name=Australia/Hobart

/ip firewall address-list
:if ([:len [ find list=management_hosts address=172.27.251.0/25 ]] = 0) do={add list=management_hosts address=172.27.251.0/25}
:if ([:len [ find list=management_hosts address=172.27.247/28 ]] = 0) do={add list=management_hosts address=172.27.247.0/28}
:if ([:len [ find list=management_hosts address=10.40.42.0/27 ]] = 0) do={add list=management_hosts address=10.40.42.0/27}
:if ([:len [ find list=management_hosts address=10.240.0.64/27 ]] = 0) do={add list=management_hosts address=10.240.0.64/27}

/ip firewall filter
remove [find where !dynamic]

:if ([:len [ find comment="Accept Established Input Connections" ]] = 0) do={
  add action=accept chain=input comment="Accept Established Input Connections" connection-state=established,related,untracked
  :log info  "Firewall Rule Added - Accept Established Input Connections"
} else= {
  set [ find comment="Allow ping to router from WAN" ] action=accept chain=input connection-state=established,related,untracked
  :log info  "Firewall Rule Updated - Accept Established Input Connections"
}
:if ([:len [find comment="Drop Invalid Input Connections"]] = 0) do={
  add action=drop chain=input comment="Drop Invalid Input Connections" connection-state=invalid
  :log info "Firewall Rule Added - Drop Invalid Input Connections"
} else={
  set [find comment="Drop Invalid Input Connections"] action=drop chain=input connection-state=invalid
  :log info "Firewall Rule Updated - Drop Invalid Input Connections"
}
:if ([:len [find comment="Allow ICMP Input"]] = 0) do={
  add action=accept chain=input comment="Allow ICMP Input" protocol=icmp
  :log info "Firewall Rule Added - Allow ICMP Input"
} else={
  set [find comment="Allow ICMP Input"] action=accept chain=input protocol=icmp
  :log info "Firewall Rule Updated - Allow ICMP Input"
}
:if ([:len [find comment="Only Allow connections to router from mgmt hosts"]] = 0) do={
  add action=accept chain=input comment="Only Allow connections to router from mgmt hosts" src-address-list=management_hosts dst-port=8728,21,22,8291,443 protocol=tcp
  :log info "Firewall Rule Added - OOnly Allow connections to router from mgmt hosts"
} else={
  set [find comment="Only Allow connections to router from mgmt hosts"] action=accept chain=input src-address-list=management_hosts dst-port=8728,21,22,8291,443 protocol=tcp
  :log info "Firewall Rule Updated - Only Allow connections to router from mgmt hosts"
}
:if ([:len [find comment="Allow SNMP from NMS"]] = 0) do={
  add action=accept chain=input comment="Allow SNMP from NMS" src-address=172.27.251.0/25 dst-port=161 protocol=udp
  :log info "Firewall Rule Added - Allow SNMP from NMS"
} else={
  set [find comment="Allow SNMP from NMS"] action=accept chain=input src-address=172.27.251.0/25 dst-port=161 protocol=udp
  :log info "Allow SNMP from NMS"
}
:if ([:len [find comment="Drop all other connections to router"]] = 0) do={
  add action=drop chain=input comment="Drop all other connections to router"
  :log info "Firewall Rule Added - Drop all other connections to router"
} else={
  set [find comment="Drop all other connections to router"] action=drop chain=input
  :log info "Firewall Rule Updated - Drop all other connections to router"
}
:if ([:len [find comment="Fast Track Established Forward Connections"]] = 0) do={
  add action=fasttrack-connection chain=forward comment="Fast Track Established Forward Connections" connection-state=established,related hw-offload=yes
  :log info "Firewall Rule Added - Fast Track Established Forward Connections"
} else={
  set [find comment="Fast Track Established Forward Connections"] action=fasttrack-connection chain=forward connection-state=established,related hw-offload=yes
  :log info "Firewall Rule Updated - Fast Track Established Forward Connections"
}
:if ([:len [find comment="Allow Established Forward Connections"]] = 0) do={
  add action=accept chain=forward comment="Allow Established Forward Connections" connection-state=established,related,untracked
  :log info "Firewall Rule Added - Allow Established Forward Connections"
} else={
  set [find comment="Allow Established Forward Connections"] action=accept chain=forward connection-state=established,related,untracked
  :log info "Firewall Rule Updated - Allow Established Forward Connections"
}
:if ([:len [find comment="Drop Invalid Forward Connections"]] = 0) do={
  add action=drop chain=forward comment="Drop Invalid Forward Connections" connection-state=invalid
  :log info "Firewall Rule Added - Drop Invalid Forward Connections"
} else={
  set [find comment="Drop Invalid Forward Connections"] action=drop chain=forward connection-state=invalid
  :log info "Firewall Rule Updated - Drop Invalid Forward Connections"
}







